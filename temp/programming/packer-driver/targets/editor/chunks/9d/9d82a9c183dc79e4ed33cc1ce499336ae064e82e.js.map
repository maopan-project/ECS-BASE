{"version":3,"sources":["file:///F:/ACode/CocosCode/ECS_Demo/assets/src/ecs/systems/FireSystem.ts"],"names":["FireSystem","GameTool","FireComponent","MoveComponent","NetworkReceiveComponent","TransformComponent","EntityType","SystemType","world","type","LogicBeforePhysics","onUpdate","msgOp","getSingletonEntityComponent","msgThisLogic","operations","i","length","op","entity","getEntityByID","entityID","fireComponent","getComponent","wantFire","body","isFire","forEach","fire","currentCoolDown","maxCoolDown","currentFrame","totalFireFrame","fireFrame","generateBullet","fromEntity","getNewEntity","Bullet","move","addComponent","trans","parseBulletMove","angle","position","set","addEntityToWorld","moveSpeed","pForAngle","Math","PI"],"mappings":"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","sourcesContent":["import GameTool from \"../../GameTool\";\r\nimport FireComponent from \"../components/FireComponent\";\r\nimport MoveComponent from \"../components/MoveComponent\";\r\nimport NetworkReceiveComponent from \"../components/NetworkComponent\";\r\nimport TransformComponent from \"../components/TransformComponent\";\r\nimport { EntityType, SystemType } from \"../framework/ECSConfig\";\r\nimport Entity from \"../framework/Entity\";\r\nimport System from \"../framework/System\";\r\nimport World from \"../framework/World\";\r\n\r\nexport default class FireSystem implements System {\r\n    world: World;\r\n\r\n    type: SystemType = SystemType.LogicBeforePhysics;\r\n\r\n    onUpdate(): void {\r\n        let msgOp = this.world.getSingletonEntityComponent(NetworkReceiveComponent);\r\n\r\n        if (msgOp.msgThisLogic) {\r\n            let operations = msgOp.msgThisLogic.operations;\r\n            for (let i = 0; i < operations.length; i++) {\r\n                let op = operations[i];\r\n                let entity = this.world.getEntityByID(op.entityID);\r\n                if (entity) {\r\n                    let fireComponent = entity.getComponent(FireComponent);\r\n                    fireComponent.wantFire = op.body.isFire;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.world.forEach([FireComponent], (entity: Entity, fire: FireComponent) => {\r\n            if (fire.currentCoolDown === 0 && fire.wantFire) {\r\n                fire.isFire = true;\r\n                fire.currentCoolDown = fire.maxCoolDown;\r\n            }\r\n\r\n            if (fire.currentCoolDown > 0) {\r\n                fire.currentCoolDown--;\r\n            }\r\n\r\n            if (fire.isFire) {\r\n                if (fire.currentFrame < fire.totalFireFrame) {\r\n                    fire.currentFrame++;\r\n                    if (fire.currentFrame === fire.fireFrame) {\r\n                        this.generateBullet(fire, entity);\r\n                    }\r\n                }\r\n\r\n                if (fire.currentFrame === fire.totalFireFrame) {\r\n                    fire.currentFrame = 0;\r\n                    fire.isFire = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    generateBullet(fire: FireComponent, fromEntity: Entity) {\r\n        let entity = this.world.getNewEntity(EntityType.Bullet);\r\n        let move = entity.addComponent(MoveComponent);\r\n        let trans = entity.addComponent(TransformComponent);\r\n        this.parseBulletMove(\r\n            fromEntity.getComponent(TransformComponent).angle,\r\n            move,\r\n            trans\r\n        );\r\n\r\n        trans.position.set(fromEntity.getComponent(TransformComponent).position);\r\n        this.world.addEntityToWorld(entity);\r\n    }\r\n\r\n    parseBulletMove(angle: number, move: MoveComponent, trans: TransformComponent) {\r\n        move.moveSpeed.set(GameTool.pForAngle(angle / 180 * Math.PI));\r\n        trans.angle = 90;\r\n    }\r\n}"]}