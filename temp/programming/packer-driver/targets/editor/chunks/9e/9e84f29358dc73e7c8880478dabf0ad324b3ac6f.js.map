{"version":3,"sources":["file:///D:/File/Cocos/ECS_Demo/assets/src/EventCenter.ts"],"names":["EventCenter","EventHandler","constructor","_handlers","Map","instance","_ins","on","eventName","func","target","once","handler","obj","has","set","get","add","Set","emit","args","val","values","handle","delete","off","offByTarget","call"],"mappings":";;;iBAAaA,W,EAgEPC,Y;;;;;;;;;;;;;6BAhEOD,W,GAAN,MAAMA,WAAN,CAAkB;AAEbE,QAAAA,WAAW,GAAG;AAAA,eASdC,SATc,GAS8B,IAAIC,GAAJ,EAT9B;AAAG;;AACC,mBAARC,QAAQ,GAAG;AACzB,cAAI,CAACL,WAAW,CAACM,IAAjB,EAAuB;AACnBN,YAAAA,WAAW,CAACM,IAAZ,GAAmB,IAAIN,WAAJ,EAAnB;AACH;;AAED,iBAAOA,WAAW,CAACM,IAAnB;AACH;;AAIDC,QAAAA,EAAE,CAACC,SAAD,EAAoBC,IAApB,EAAoDC,MAApD,EAAqEC,IAArE,EAAqF;AACnF,cAAIC,OAAO,GAAG,IAAIX,YAAJ,EAAd;AACAW,UAAAA,OAAO,CAACH,IAAR,GAAeA,IAAf;AACAG,UAAAA,OAAO,CAACC,GAAR,GAAcJ,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,CAAd;AACAG,UAAAA,OAAO,CAACD,IAAR,GAAe,KAAf;;AAEA,cAAI,KAAKR,SAAL,CAAeW,GAAf,CAAmBN,SAAnB,CAAJ,EAAmC;AAC/B,gBAAIO,GAAG,GAAG,KAAKZ,SAAL,CAAea,GAAf,CAAmBR,SAAnB,CAAV;;AACAO,YAAAA,GAAG,CAACE,GAAJ,CAAQL,OAAR;AAEH,WAJD,MAIO;AACH,gBAAIG,GAAG,GAAG,IAAIG,GAAJ,EAAV;AACAH,YAAAA,GAAG,CAACE,GAAJ,CAAQL,OAAR;;AACA,iBAAKT,SAAL,CAAeY,GAAf,CAAmBP,SAAnB,EAA8BO,GAA9B;AAEH;AAGJ;;AAEDI,QAAAA,IAAI,CAACX,SAAD,EAAoB,GAAGY,IAAvB,EAAoC;AACpC,cAAI,CAAC,KAAKjB,SAAL,CAAeW,GAAf,CAAmBN,SAAnB,CAAL,EAAoC;AAChC;AACH;;AAED,cAAIO,GAAG,GAAG,KAAKZ,SAAL,CAAea,GAAf,CAAmBR,SAAnB,CAAV;;AAEA,eAAK,MAAMa,GAAX,IAAkBN,GAAG,CAACO,MAAJ,EAAlB,EAAgC;AAC5BD,YAAAA,GAAG,CAACE,MAAJ,CAAW,GAAGH,IAAd;;AAEA,gBAAIC,GAAG,CAACV,IAAR,EAAc;AACVI,cAAAA,GAAG,CAACS,MAAJ,CAAWH,GAAX;AACH;AACJ;AACJ;;AAEDI,QAAAA,GAAG,CAACjB,SAAD,EAAoB;AACnB,cAAI,CAAC,KAAKL,SAAL,CAAeW,GAAf,CAAmBN,SAAnB,CAAL,EAAoC;AAChC;AACH;;AAED,eAAKL,SAAL,CAAeqB,MAAf,CAAsBhB,SAAtB;AACH;;AAEDkB,QAAAA,WAAW,CAAChB,MAAD,EAAiB,CACxB;AAEA;AACH;;AA7DoB,O;;AAAZV,MAAAA,W,CACMM,I,GAAoB,I;AA+DjCL,MAAAA,Y,GAAN,MAAMA,YAAN,CAAmB;AAAA;AAAA,eACfQ,IADe;AAAA,eAEfI,GAFe;AAAA,eAGfF,IAHe;AAAA;;AAKfY,QAAAA,MAAM,CAAC,GAAGH,IAAJ,EAAiB;AACnB,eAAKX,IAAL,CAAUkB,IAAV,CAAe,KAAKd,GAApB,EAAyB,GAAGO,IAA5B;AACH;;AAPc,O","sourcesContent":["export class EventCenter {\r\n    private static _ins: EventCenter = null;\r\n    private constructor() { }\r\n    public static get instance() {\r\n        if (!EventCenter._ins) {\r\n            EventCenter._ins = new EventCenter();\r\n        }\r\n\r\n        return EventCenter._ins;\r\n    }\r\n\r\n    private _handlers: Map<string, Set<EventHandler>> = new Map();\r\n\r\n    on(eventName: string, func: (...args: any[]) => void, target?: object, once?: boolean) {\r\n        let handler = new EventHandler();\r\n        handler.func = func;\r\n        handler.obj = func[\"Scopes\"][0];\r\n        handler.once = false;\r\n\r\n        if (this._handlers.has(eventName)) {\r\n            let set = this._handlers.get(eventName);\r\n            set.add(handler);\r\n\r\n        } else {\r\n            let set = new Set<EventHandler>();\r\n            set.add(handler);\r\n            this._handlers.set(eventName, set);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    emit(eventName: string, ...args: any[]) {\r\n        if (!this._handlers.has(eventName)) {\r\n            return;\r\n        }\r\n\r\n        let set = this._handlers.get(eventName);\r\n\r\n        for (const val of set.values()) {\r\n            val.handle(...args);\r\n\r\n            if (val.once) {\r\n                set.delete(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    off(eventName: string) {\r\n        if (!this._handlers.has(eventName)) {\r\n            return;\r\n        }\r\n\r\n        this._handlers.delete(eventName);\r\n    }\r\n\r\n    offByTarget(target: object) {\r\n        // for (const val of this.) {\r\n\r\n        // }\r\n    }\r\n}\r\n\r\nclass EventHandler {\r\n    func: Function;\r\n    obj: object;\r\n    once: boolean;\r\n\r\n    handle(...args: any[]) {\r\n        this.func.call(this.obj, ...args);\r\n    }\r\n}"]}