{"version":3,"sources":["file:///F:/ACode/CocosCode/ECS_Demo/assets/src/GameType.ts"],"names":["Vector3","Vec3","x","y","z","length","set","arguments","undefined","add","vec3","multiply","val","resetToZero","equal","out","fixed","offsetX","Math","abs","offsetY","offsetZ"],"mappings":";;;wEAEaA,O;;;;;;;;;AAFJC,MAAAA,I,OAAAA,I;;;;;;;;;yBAEID,O,GAAN,MAAMA,OAAN,CAAc;AAAA;AAAA,eACjBE,CADiB,GACL,CADK;AAAA,eAEjBC,CAFiB,GAEL,CAFK;AAAA,eAGjBC,CAHiB,GAGL,CAHK;AAAA;;AAKP,YAANC,MAAM,GAAG;AACT,iBAAO,CAAC,KAAKH,CAAL,IAAU,CAAV,GAAc,KAAKC,CAAL,IAAU,CAAxB,GAA4B,KAAKC,CAAL,IAAU,CAAvC,MAA8C,IAAI,CAAlD,CAAP;AACH;;AAMDE,QAAAA,GAAG,GAAG;AACF,cAAIC,SAAS,CAAC,CAAD,CAAT,YAAwBP,OAAxB,IAAmCO,SAAS,CAAC,CAAD,CAAT,YAAwBN,IAA/D,EAAqE;AACjE,iBAAKC,CAAL,GAASK,SAAS,CAAC,CAAD,CAAT,CAAaL,CAAtB;AACA,iBAAKC,CAAL,GAASI,SAAS,CAAC,CAAD,CAAT,CAAaJ,CAAtB;AACA,iBAAKC,CAAL,GAASG,SAAS,CAAC,CAAD,CAAT,CAAaH,CAAtB;AAEH,WALD,MAKO;AAEH,gBAAIG,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAArB,EAAgC;AAC5B,mBAAKN,CAAL,GAASK,SAAS,CAAC,CAAD,CAAlB;AACH;;AAED,gBAAIA,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAArB,EAAgC;AAC5B,mBAAKL,CAAL,GAASI,SAAS,CAAC,CAAD,CAAlB;AACH;;AAED,gBAAIA,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAArB,EAAgC;AAC5B,mBAAKJ,CAAL,GAASG,SAAS,CAAC,CAAD,CAAlB;AACH;AAEJ;AACJ;;AAEDE,QAAAA,GAAG,CAACC,IAAD,EAAgB;AACf,eAAKR,CAAL,IAAUQ,IAAI,CAACR,CAAf;AACA,eAAKC,CAAL,IAAUO,IAAI,CAACP,CAAf;AACA,eAAKC,CAAL,IAAUM,IAAI,CAACN,CAAf;AAEH;;AAEDO,QAAAA,QAAQ,CAACC,GAAD,EAAc;AAClB,eAAKV,CAAL,IAAUU,GAAV;AACA,eAAKT,CAAL,IAAUS,GAAV;AACA,eAAKR,CAAL,IAAUQ,GAAV;AACH;;AAEDC,QAAAA,WAAW,GAAG;AACV,eAAKX,CAAL,GAAS,CAAT;AACA,eAAKC,CAAL,GAAS,CAAT;AACA,eAAKC,CAAL,GAAS,CAAT;AACH;;AAEDU,QAAAA,KAAK,CAACC,GAAD,EAAeC,KAAa,GAAG,IAA/B,EAAqC;AACtC,cAAIC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASJ,GAAG,CAACb,CAAJ,GAAQ,KAAKA,CAAtB,IAA2Bc,KAAzC;AACA,cAAII,OAAO,GAAGF,IAAI,CAACC,GAAL,CAASJ,GAAG,CAACZ,CAAJ,GAAQ,KAAKA,CAAtB,IAA2Ba,KAAzC;AACA,cAAIK,OAAO,GAAGH,IAAI,CAACC,GAAL,CAASJ,GAAG,CAACX,CAAJ,GAAQ,KAAKA,CAAtB,IAA2BY,KAAzC;AAEA,iBAAOC,OAAO,GAAG,CAAV,IAAeG,OAAO,GAAG,CAAzB,IAA8BC,OAAO,GAAG,CAA/C;AACH;;AA7DgB,O","sourcesContent":["import { Vec3 } from \"cc\";\r\n\r\nexport class Vector3 {\r\n    x: number = 0;\r\n    y: number = 0;\r\n    z: number = 0;\r\n\r\n    get length() {\r\n        return (this.x ** 2 + this.y ** 2 + this.z ** 2) ** (1 / 2);\r\n    }\r\n\r\n    set(v3: Vector3 | Vec3): void;\r\n\r\n    set(a?: number, b?: number, c?: number): void;\r\n\r\n    set() {\r\n        if (arguments[0] instanceof Vector3 || arguments[0] instanceof Vec3) {\r\n            this.x = arguments[0].x;\r\n            this.y = arguments[0].y;\r\n            this.z = arguments[0].z;\r\n\r\n        } else {\r\n\r\n            if (arguments[0] !== undefined) {\r\n                this.x = arguments[0];\r\n            }\r\n\r\n            if (arguments[1] !== undefined) {\r\n                this.y = arguments[1];\r\n            }\r\n\r\n            if (arguments[2] !== undefined) {\r\n                this.z = arguments[2];\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    add(vec3: Vector3) {\r\n        this.x += vec3.x;\r\n        this.y += vec3.y;\r\n        this.z += vec3.z;\r\n\r\n    }\r\n\r\n    multiply(val: number) {\r\n        this.x *= val;\r\n        this.y *= val;\r\n        this.z *= val;\r\n    }\r\n\r\n    resetToZero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n\r\n    equal(out: Vector3, fixed: number = 1e-3) {\r\n        let offsetX = Math.abs(out.x - this.x) - fixed;\r\n        let offsetY = Math.abs(out.y - this.y) - fixed;\r\n        let offsetZ = Math.abs(out.z - this.z) - fixed;\r\n\r\n        return offsetX < 0 && offsetY < 0 && offsetZ < 0;\r\n    }\r\n}\r\n"]}