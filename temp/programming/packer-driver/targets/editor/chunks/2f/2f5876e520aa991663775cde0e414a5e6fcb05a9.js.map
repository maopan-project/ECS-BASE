{"version":3,"sources":["file:///F:/ACode/CocosCode/ECS_Demo/assets/src/ecs/systems/CollisionDetectionSystem.ts"],"names":["CollisionDetectionSystem","CollisionComponent","TransformComponent","SystemType","world","type","Physics","onUpdate","entitiesSet","getEntitiesByComponents","arrEntities","i","length","getComponent","otherCollisionEntityIDs","entity","transform","collisionRadius","collision","j","otherEntity","otherTransform","otherCollision","distance","position","distanceSquared","radiusSum","push","id","console","log"],"mappings":";;;kFAOqBA,wB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPdC,MAAAA,kB;;AACAC,MAAAA,kB;;AACEC,MAAAA,U,iBAAAA,U;;;;;;;yBAKYH,wB,GAAN,MAAMA,wBAAN,CAAiD;AAAA;AAAA,eAC5DI,KAD4D;AAAA,eAE5DC,IAF4D,GAEzC;AAAA;AAAA,wCAAWC,OAF8B;AAAA;;AAI5DC,QAAAA,QAAQ,GAAS;AACb,cAAIC,WAAW,GAAG,KAAKJ,KAAL,CAAWK,uBAAX,CAAmC;AAAA;AAAA;AAAA;AAAA,uDAAnC,CAAlB;AACA,cAAIC,WAAqB,GAAG,CAAC,GAAGF,WAAJ,CAA5B;;AAEA,eAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACE,MAAhC,EAAwCD,CAAC,EAAzC,EACID,WAAW,CAACC,CAAD,CAAX,CAAeE,YAAf;AAAA;AAAA,wDAAgDC,uBAAhD,CAAwEF,MAAxE,GAAiF,CAAjF,CALS,CAOb;;;AACA,eAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC,gBAAII,MAAM,GAAGL,WAAW,CAACC,CAAD,CAAxB;AACA,gBAAIK,SAAS,GAAGD,MAAM,CAACF,YAAP;AAAA;AAAA,yDAAhB;;AACA,gBAAIG,SAAS,CAACC,eAAV,KAA8B,CAAC,CAAnC,EAAsC;AAClC;AACH;;AAED,gBAAIC,SAAS,GAAGH,MAAM,CAACF,YAAP;AAAA;AAAA,yDAAhB;;AACA,iBAAK,IAAIM,CAAC,GAAGR,CAAC,GAAG,CAAjB,EAAoBQ,CAAC,GAAGT,WAAW,CAACE,MAApC,EAA4CO,CAAC,EAA7C,EAAiD;AAC7C,kBAAIC,WAAW,GAAGV,WAAW,CAACS,CAAD,CAA7B;AACA,kBAAIE,cAAc,GAAGD,WAAW,CAACP,YAAZ;AAAA;AAAA,2DAArB;;AACA,kBAAIQ,cAAc,CAACJ,eAAf,KAAmC,CAAC,CAAxC,EAA2C;AACvC;AACH;;AAED,kBAAIK,cAAc,GAAGF,WAAW,CAACP,YAAZ;AAAA;AAAA,2DAArB;AAEA,kBAAIU,QAAQ,GAAGP,SAAS,CAACQ,QAAV,CAAmBC,eAAnB,CAAmCJ,cAAc,CAACG,QAAlD,CAAf;AACA,kBAAIE,SAAS,GAAGV,SAAS,CAACC,eAAV,IAA6B,CAA7B,GAAiCI,cAAc,CAACJ,eAAf,IAAkC,CAAnF;;AAEA,kBAAIM,QAAQ,GAAGG,SAAf,EAA0B;AACtBR,gBAAAA,SAAS,CAACJ,uBAAV,CAAkCa,IAAlC,CAAuCP,WAAW,CAACQ,EAAnD;AACAN,gBAAAA,cAAc,CAACR,uBAAf,CAAuCa,IAAvC,CAA4CZ,MAAM,CAACa,EAAnD;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AAEJ;AACJ;AACJ;;AAxC2D,O","sourcesContent":["import CollisionComponent from \"../components/CollisionComponent\";\r\nimport TransformComponent from \"../components/TransformComponent\";\r\nimport { SystemType } from \"../framework/ECSConfig\";\r\nimport Entity from \"../framework/Entity\";\r\nimport System from \"../framework/System\";\r\nimport World from \"../framework/World\";\r\n\r\nexport default class CollisionDetectionSystem implements System {\r\n    world: World;\r\n    type: SystemType = SystemType.Physics;\r\n\r\n    onUpdate(): void {\r\n        let entitiesSet = this.world.getEntitiesByComponents([TransformComponent, CollisionComponent]);\r\n        let arrEntities: Entity[] = [...entitiesSet];\r\n\r\n        for (let i = 0; i < arrEntities.length; i++)\r\n            arrEntities[i].getComponent(CollisionComponent).otherCollisionEntityIDs.length = 0;\r\n\r\n        // 这里是最暴力的双重for\r\n        for (let i = 0; i < arrEntities.length; i++) {\r\n            let entity = arrEntities[i];\r\n            let transform = entity.getComponent(TransformComponent);\r\n            if (transform.collisionRadius === -1) {\r\n                continue;\r\n            }\r\n\r\n            let collision = entity.getComponent(CollisionComponent);\r\n            for (let j = i + 1; j < arrEntities.length; j++) {\r\n                let otherEntity = arrEntities[j];\r\n                let otherTransform = otherEntity.getComponent(TransformComponent);\r\n                if (otherTransform.collisionRadius === -1) {\r\n                    continue;\r\n                }\r\n\r\n                let otherCollision = otherEntity.getComponent(CollisionComponent);\r\n\r\n                let distance = transform.position.distanceSquared(otherTransform.position);\r\n                let radiusSum = transform.collisionRadius ** 2 + otherTransform.collisionRadius ** 2;\r\n\r\n                if (distance < radiusSum) {\r\n                    collision.otherCollisionEntityIDs.push(otherEntity.id);\r\n                    otherCollision.otherCollisionEntityIDs.push(entity.id);\r\n                    console.log('发生了碰撞');\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}"]}