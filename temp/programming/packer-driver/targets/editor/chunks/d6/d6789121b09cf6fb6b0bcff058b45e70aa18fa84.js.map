{"version":3,"sources":["file:///D:/File/Cocos/ECS_Demo/assets/src/ecs/systems/MoveSystem.ts"],"names":["MoveSystem","TransformComponent","SystemType","NetworkReceiveComponent","MoveComponent","world","type","Physics","onUpdate","msgOp","getSingletonEntityComponent","msgThisLogic","operations","length","forEach","entity","move","transform","i","op","entityID","id","moveSpeed","set","body","dir","position","add"],"mappings":";;;sGAUaA,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAVJC,MAAAA,kB,iBAAAA,kB;;AACAC,MAAAA,U,iBAAAA,U;;AAIFC,MAAAA,uB;;AAEAC,MAAAA,a;;;;;;;4BAGMJ,U,GAAN,MAAMA,UAAN,CAAmC;AAAA;AAAA,eACtCK,KADsC,GACvB,IADuB;AAAA,eAGtCC,IAHsC,GAGnB;AAAA;AAAA,wCAAWC,OAHQ;AAAA;;AAKtCC,QAAAA,QAAQ,GAAS;AACb,cAAIC,KAAK,GAAG,KAAKJ,KAAL,CAAWK,2BAAX;AAAA;AAAA,iEAAZ;;AAEA,cAAI,CAACD,KAAK,CAACE,YAAP,IAAuBF,KAAK,CAACE,YAAN,CAAmBC,UAAnB,CAA8BC,MAA9B,IAAwC,CAAnE,EAAsE;AAClE;AACH;;AAED,eAAKR,KAAL,CAAWS,OAAX,CAAmB;AAAA;AAAA;AAAA;AAAA,uDAAnB,EAAwD,CAACC,MAAD,EAAiBC,IAAjB,EAAsCC,SAAtC,KAAwE;AAC5H,gBAAIL,UAAU,GAAGH,KAAK,CAACE,YAAN,CAAmBC,UAApC;;AAEA,iBAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,UAAU,CAACC,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;AACxC,kBAAIC,EAAE,GAAGP,UAAU,CAACM,CAAD,CAAnB;;AAEA,kBAAIC,EAAE,CAACC,QAAH,IAAeL,MAAM,CAACM,EAA1B,EAA8B;AAC1B;AACAL,gBAAAA,IAAI,CAACM,SAAL,CAAeC,GAAf,CAAmBJ,EAAE,CAACK,IAAH,CAAQC,GAA3B;AACAR,gBAAAA,SAAS,CAACS,QAAV,CAAmBC,GAAnB,CAAuBX,IAAI,CAACM,SAA5B;AACH;AACJ;AACJ,WAZD;AAaH;;AAzBqC,O","sourcesContent":["import { TransformComponent } from \"../components/TransformComponent\";\r\nimport { SystemType } from \"../framework/ECSConfig\";\r\nimport { Entity } from \"../framework/Entity\";\r\nimport { System } from \"../framework/System\";\r\nimport { World } from \"../framework/World\";\r\nimport NetworkReceiveComponent from \"../components/NetworkComponent\";\r\nimport { GameMessageOperationBody } from \"../../network/GameMessage\";\r\nimport MoveComponent from \"../components/MoveCompoent\";\r\n\r\n\r\nexport class MoveSystem implements System {\r\n    world: World = null;\r\n\r\n    type: SystemType = SystemType.Physics;\r\n\r\n    onUpdate(): void {\r\n        let msgOp = this.world.getSingletonEntityComponent(NetworkReceiveComponent);\r\n\r\n        if (!msgOp.msgThisLogic || msgOp.msgThisLogic.operations.length == 0) {\r\n            return;\r\n        }\r\n\r\n        this.world.forEach([MoveComponent, TransformComponent], (entity: Entity, move: MoveComponent, transform: TransformComponent) => {\r\n            let operations = msgOp.msgThisLogic.operations;\r\n\r\n            for (let i = 0; i < operations.length; i++) {\r\n                let op = operations[i];\r\n\r\n                if (op.entityID == entity.id) {\r\n                    // 这里的方向还应该乘上移动速度\r\n                    move.moveSpeed.set(op.body.dir);\r\n                    transform.position.add(move.moveSpeed);\r\n                }\r\n            }\r\n        });\r\n    }\r\n} "]}