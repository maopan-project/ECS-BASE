{"version":3,"sources":["file:///F:/ACode/CocosCode/ECS_Demo/assets/src/ecs/systems/HitSystem.ts"],"names":["HitSystem","ActorStatusComponent","BulletComponent","CampComponent","CollisionComponent","SystemType","world","type","LogicAfterPhysics","onUpdate","forEach","e","collision","camp","bullet","collisionEntities","otherCollisionEntityIDs","i","length","otherID","otherEntity","getEntityByID","otherActorStatus","getComponent","otherCamp","healthPoint","damage","fromEntityID","scoring","console","log"],"mappings":";;;oHASqBA,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATdC,MAAAA,oB;;AACAC,MAAAA,e;;AACAC,MAAAA,a;;AACAC,MAAAA,kB;;AACEC,MAAAA,U,iBAAAA,U;;;;;;;yBAKYL,S,GAAN,MAAMA,SAAN,CAAkC;AAAA;AAAA,eAC7CM,KAD6C;AAAA,eAE7CC,IAF6C,GAE1B;AAAA;AAAA,wCAAWC,iBAFe;AAAA;;AAI7CC,QAAAA,QAAQ,GAAS;AACb,eAAKH,KAAL,CAAWI,OAAX,CAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAnB,EACI,CAACC,CAAD,EAAYC,SAAZ,EAA2CC,IAA3C,EAAgEC,MAAhE,KAA4F;AAExF,gBAAIC,iBAAiB,GAAGH,SAAS,CAACI,uBAAlC;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,iBAAiB,CAACG,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,kBAAIE,OAAO,GAAGJ,iBAAiB,CAACE,CAAD,CAA/B;AACA,kBAAIG,WAAW,GAAG,KAAKd,KAAL,CAAWe,aAAX,CAAyBF,OAAzB,CAAlB;AACA,kBAAIG,gBAAgB,GAAGF,WAAW,CAACG,YAAZ;AAAA;AAAA,+DAAvB;AACA,kBAAIC,SAAS,GAAGJ,WAAW,CAACG,YAAZ;AAAA;AAAA,iDAAhB;;AAEA,kBAAID,gBAAgB,IAAIE,SAApB,IAAiCA,SAAS,CAACX,IAAV,KAAmBA,IAAI,CAACA,IAA7D,EAAmE;AAC/DS,gBAAAA,gBAAgB,CAACG,WAAjB,IAAgCX,MAAM,CAACY,MAAvC;AACA,qBAAKpB,KAAL,CAAWe,aAAX,CAAyBP,MAAM,CAACa,YAAhC,EAA8CJ,YAA9C;AAAA;AAAA,kEAAiFK,OAAjF;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ;AAEJ,WAjBL;AAmBH;;AAxB4C,O","sourcesContent":["import ActorStatusComponent from \"../components/ActorStatusComponent\";\r\nimport BulletComponent from \"../components/BulletComponent\";\r\nimport CampComponent from \"../components/CampComponent\";\r\nimport CollisionComponent from \"../components/CollisionComponent\";\r\nimport { SystemType } from \"../framework/ECSConfig\";\r\nimport Entity from \"../framework/Entity\";\r\nimport System from \"../framework/System\";\r\nimport World from \"../framework/World\";\r\n\r\nexport default class HitSystem implements System {\r\n    world: World;\r\n    type: SystemType = SystemType.LogicAfterPhysics;\r\n\r\n    onUpdate(): void {\r\n        this.world.forEach([CollisionComponent, CampComponent, BulletComponent],\r\n            (e: Entity, collision: CollisionComponent, camp: CampComponent, bullet: BulletComponent) => {\r\n\r\n                let collisionEntities = collision.otherCollisionEntityIDs;\r\n                for (let i = 0; i < collisionEntities.length; i++) {\r\n                    let otherID = collisionEntities[i];\r\n                    let otherEntity = this.world.getEntityByID(otherID);\r\n                    let otherActorStatus = otherEntity.getComponent(ActorStatusComponent);\r\n                    let otherCamp = otherEntity.getComponent(CampComponent);\r\n\r\n                    if (otherActorStatus && otherCamp && otherCamp.camp !== camp.camp) {\r\n                        otherActorStatus.healthPoint -= bullet.damage;\r\n                        this.world.getEntityByID(bullet.fromEntityID).getComponent(ActorStatusComponent).scoring++;\r\n                        console.log('子弹打到人了');\r\n                    }\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n}"]}