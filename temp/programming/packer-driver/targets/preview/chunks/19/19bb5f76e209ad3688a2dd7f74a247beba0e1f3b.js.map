{"version":3,"sources":["file:///F:/ACode/CocosCode/ECS_Demo/assets/src/ecs/GameService.ts"],"names":["GameService","ActorStatusComponent","AutoDestroyComponent","BulletComponent","CampComponent","CollisionComponent","FireComponent","MoveComponent","NetworkReceiveComponent","TransformComponent","ComponentType","World","AutoDestroySystem","CollisionDetectionSystem","FireSystem","HitSystem","MoveSystem","NetworkReceiveSystem","initWorld","prototype","type","TransformComp","NetworkReceive","Fire","Collision","ActorStatus","Camp","Bullet","AutoDestroy","world","instance","addSystemToCycle","logicCycleThisCycle","nrc","getSingletonEntityComponent","n2l","networkUpdateInterval","fixedUpdateInterval","maxLogicNet","Math","ceil","msgToDeal","length","timePass","Date","now","startTime","maxLogicTime","floor","logicThisCycle","min","logicCycleCount"],"mappings":"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","sourcesContent":["import ActorStatusComponent from \"./components/ActorStatusComponent\";\r\nimport AutoDestroyComponent from \"./components/AutoDestroyComponent\";\r\nimport BulletComponent from \"./components/BulletComponent\";\r\nimport CampComponent from \"./components/CampComponent\";\r\nimport CollisionComponent from \"./components/CollisionComponent\";\r\nimport FireComponent from \"./components/FireComponent\";\r\nimport MoveComponent from \"./components/MoveComponent\";\r\nimport NetworkReceiveComponent from \"./components/NetworkComponent\";\r\nimport TransformComponent from \"./components/TransformComponent\";\r\nimport { ComponentType } from \"./framework/ECSConfig\";\r\nimport World from \"./framework/World\";\r\nimport AutoDestroySystem from \"./systems/AutoDestroySystem\";\r\nimport CollisionDetectionSystem from \"./systems/CollisionDetectionSystem\";\r\nimport FireSystem from \"./systems/FireSystem\";\r\nimport HitSystem from \"./systems/HitSystem\";\r\nimport { MoveSystem } from \"./systems/MoveSystem\";\r\nimport NetworkReceiveSystem from \"./systems/NetwrokReciveSystem\";\r\n\r\nexport default class GameService {\r\n\r\n    static initWorld(): void {\r\n        TransformComponent.prototype.type = ComponentType.TransformComp;\r\n        NetworkReceiveComponent.prototype.type = ComponentType.NetworkReceive;\r\n        MoveComponent.prototype.type = ComponentType.MoveComponent;\r\n        FireComponent.prototype.type = ComponentType.Fire;\r\n        CollisionComponent.prototype.type = ComponentType.Collision;\r\n        ActorStatusComponent.prototype.type = ComponentType.ActorStatus;\r\n        CampComponent.prototype.type = ComponentType.Camp;\r\n        BulletComponent.prototype.type = ComponentType.Bullet;\r\n        AutoDestroyComponent.prototype.type = ComponentType.AutoDestroy;\r\n\r\n        let world = World.instance;\r\n        world.addSystemToCycle(new MoveSystem());\r\n        world.addSystemToCycle(new NetworkReceiveSystem());\r\n        world.addSystemToCycle(new FireSystem());\r\n        world.addSystemToCycle(new CollisionDetectionSystem());\r\n        world.addSystemToCycle(new HitSystem());\r\n        world.addSystemToCycle(new AutoDestroySystem());\r\n    }\r\n\r\n    static logicCycleThisCycle() {\r\n        let world = World.instance;\r\n\r\n        let nrc = world.getSingletonEntityComponent(NetworkReceiveComponent);\r\n        // 一个网络帧可以执行多少个逻辑帧\r\n        let n2l = world.networkUpdateInterval / world.fixedUpdateInterval;\r\n        // 当前网络帧最大支持的逻辑帧数\r\n        let maxLogicNet = Math.ceil(nrc.msgToDeal.length * n2l);\r\n\r\n        // 流失的时间\r\n        let timePass = Date.now() - nrc.startTime;\r\n        // 当前流失时间支持的最大逻辑帧次数\r\n        let maxLogicTime = Math.floor(timePass / world.fixedUpdateInterval) + 1;\r\n\r\n        let logicThisCycle = Math.min(maxLogicNet, maxLogicTime) - world.logicCycleCount;\r\n\r\n        // console.log('可以执行的逻辑帧是-', logicThisCycle, '最大的时间值-', maxLogicTime, '最大的网络值-', maxLogicNet);\r\n        return logicThisCycle;\r\n    }\r\n}"]}