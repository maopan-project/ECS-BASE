{"version":3,"sources":["file:///F:/ACode/CocosCode/ECS_Demo/assets/src/GameStart.ts"],"names":["_decorator","Component","Input","input","KeyCode","Label","EventCenter","GameMessageC2S_GameStart","GameMessageC2S_Operation","GameMessageType","MessagePool","WSClient","GameService","World","EntityType","TransformComponent","NetworkReceiveComponent","MoveComponent","Vector3","ccclass","property","GameStart","_keyMap","Map","uid","selfEntityID","isInGame","lastDir","onClickGameStart","instance","send","onLoad","on","EventType","KEY_DOWN","keyDown","KEY_UP","keyUp","S2C_GAME_START","toString","onGetGameStart","S2C_OPERATIONS","onGetOperations","S2C_UID","onGetUID","start","set","KEY_A","KEY_S","KEY_D","KEY_W","connect","update","deltaTime","cycle","sendOp","x","y","get","msg","entityID","body","dir","recycle","event","has","keyCode","initWorld","uids","forEach","index","addPlayer","startCycle","nrc","getSingletonEntityComponent","msgToDeal","push","lbUserID","string","console","log","player","getNewEntity","Actor","addComponent","addEntityToWorld","id"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventKeyboard, Input, input, KeyCode, Label, Prefab } from 'cc';\r\nimport { EventCenter } from './event/EventCenter';\r\nimport { GameMessageC2S_GameStart, GameMessageC2S_Operation, GameMessageS2C_GameStart, GameMessageS2C_Operations, GameMessageS2C_UID, GameMessageType, MessagePool } from './network/GameMessage';\r\nimport { WSClient } from './network/WSClient';\r\nimport GameService from './ecs/GameService';\r\nimport { World } from './ecs/framework/World';\r\nimport { EntityType } from './ecs/framework/ECSConfig';\r\nimport { TransformComponent } from './ecs/components/TransformComponent';\r\nimport NetworkReceiveComponent from './ecs/components/NetworkComponent';\r\nimport MoveComponent from './ecs/components/MoveCompoent';\r\nimport { Vector3 } from './GameType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport class GameStart extends Component {\r\n    @property(Label)\r\n    lbUserID: Label = null;\r\n\r\n    private _keyMap: Map<KeyCode, boolean> = new Map();\r\n\r\n    uid: number = 0;\r\n    selfEntityID: number = 0;\r\n    isInGame: boolean = false;\r\n    lastDir: Vector3 = new Vector3();\r\n\r\n    onClickGameStart() {\r\n        WSClient.instance.send(new GameMessageC2S_GameStart);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        input.on(Input.EventType.KEY_DOWN, this.keyDown, this);\r\n        input.on(Input.EventType.KEY_UP, this.keyUp, this);\r\n\r\n        EventCenter.instance.on(GameMessageType.S2C_GAME_START.toString(), this.onGetGameStart, this);\r\n        EventCenter.instance.on(GameMessageType.S2C_OPERATIONS.toString(), this.onGetOperations, this);\r\n        EventCenter.instance.on(GameMessageType.S2C_UID.toString(), this.onGetUID, this);\r\n    }\r\n\r\n    protected start() {\r\n        this._keyMap.set(KeyCode.KEY_A, false);\r\n        this._keyMap.set(KeyCode.KEY_S, false);\r\n        this._keyMap.set(KeyCode.KEY_D, false);\r\n        this._keyMap.set(KeyCode.KEY_W, false);\r\n\r\n        WSClient.instance.connect();\r\n    }\r\n\r\n    protected update(deltaTime: number) {\r\n        if (this.isInGame) {\r\n            World.instance.cycle();\r\n            this.sendOp();\r\n        }\r\n    }\r\n\r\n    private sendOp() {\r\n        let x = 0;\r\n        let y = 0;\r\n\r\n        if (this._keyMap.get(KeyCode.KEY_A))\r\n            x -= 1;\r\n\r\n        if (this._keyMap.get(KeyCode.KEY_S))\r\n            y -= 1;\r\n\r\n        if (this._keyMap.get(KeyCode.KEY_D))\r\n            x += 1;\r\n\r\n        if (this._keyMap.get(KeyCode.KEY_W))\r\n            y += 1;\r\n\r\n        if (this.lastDir.x != x || this.lastDir.y != y) {\r\n            this.lastDir.set(x, y);\r\n\r\n            let msg = MessagePool.get(GameMessageC2S_Operation);\r\n            msg.uid = this.uid;\r\n            msg.entityID = this.selfEntityID;\r\n            msg.body.dir.set(x, y);\r\n\r\n            WSClient.instance.send(msg);\r\n\r\n            MessagePool.recycle(msg);\r\n        }\r\n\r\n    }\r\n\r\n    private keyDown(event: EventKeyboard): void {\r\n        if (this._keyMap.has(event.keyCode)) {\r\n            this._keyMap.set(event.keyCode, true);\r\n        }\r\n    }\r\n\r\n    private keyUp(event: EventKeyboard): void {\r\n        if (this._keyMap.has(event.keyCode)) {\r\n            this._keyMap.set(event.keyCode, false);\r\n        }\r\n    }\r\n\r\n    private onGetGameStart(msg: GameMessageS2C_GameStart) {\r\n\r\n        GameService.initWorld();\r\n\r\n        msg.uids.forEach((uid, index) => {\r\n            this.addPlayer(uid);\r\n        });\r\n\r\n        this.lastDir.set(1, 1);\r\n        this.isInGame = true;\r\n        World.instance.startCycle();\r\n    }\r\n\r\n    private onGetOperations(msg: GameMessageS2C_Operations) {\r\n        let nrc = World.instance.getSingletonEntityComponent(NetworkReceiveComponent);\r\n        nrc.msgToDeal.push(msg);\r\n    }\r\n\r\n    private onGetUID(msg: GameMessageS2C_UID) {\r\n        this.uid = msg.uid;\r\n        this.lbUserID.string = 'user:' + this.uid.toString();\r\n    }\r\n\r\n    private addPlayer(uid: number) {\r\n        console.log('add player', uid);\r\n        let player = World.instance.getNewEntity(EntityType.Actor);\r\n        player.addComponent(MoveComponent);\r\n        player.addComponent(TransformComponent);\r\n        World.instance.addEntityToWorld(player);\r\n\r\n        if (uid === this.uid) {\r\n            this.selfEntityID = player.id;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}