{"version":3,"sources":["file:///D:/File/Cocos/ECS_Demo/assets/src/WSClient.ts"],"names":["_decorator","Component","log","EventCenter","EventDefine","ccclass","property","WSClient","ws","onLoad","instance","connect","WebSocket","onopen","ev","emit","EVENT_NETWORK_CONNECT","onmessage","data","obj","JSON","parse","type","toString","send","msg","str","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,G,OAAAA,G;;AAEvBC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;0BAGjBO,Q,WADZF,OAAO,CAAC,UAAD,C,2BAAR,MACaE,QADb,SAC8BN,SAD9B,CACwC;AAAA;AAAA;AAAA,eAG5BO,EAH4B,GAGZ,IAHY;AAAA;;AAK1BC,QAAAA,MAAM,GAAS;AACrBF,UAAAA,QAAQ,CAACG,QAAT,GAAoB,IAApB;AACH;;AAEMC,QAAAA,OAAO,GAAG;AACbT,UAAAA,GAAG,CAAC,4BAAD,CAAH;AAEA,cAAIM,EAAE,GAAG,IAAII,SAAJ,CAAc,qBAAd,CAAT;;AACAJ,UAAAA,EAAE,CAACK,MAAH,GAAaC,EAAD,IAAsB;AAC9B;AAAA;AAAA,4CAAYJ,QAAZ,CAAqBK,IAArB,CAA0B;AAAA;AAAA,4CAAYC,qBAAtC;AACH,WAFD;;AAIAR,UAAAA,EAAE,CAACS,SAAH,GAAgBH,EAAD,IAAsB;AACjCZ,YAAAA,GAAG,CAAC,WAAD,EAAcY,EAAE,CAACI,IAAjB,CAAH;AACA,gBAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWP,EAAE,CAACI,IAAd,CAAV;AACA;AAAA;AAAA,4CAAYR,QAAZ,CAAqBK,IAArB,CAA0BI,GAAG,CAACG,IAAJ,CAASC,QAAT,EAA1B,EAA+CJ,GAA/C;AACH,WAJD;;AAMA,eAAKX,EAAL,GAAUA,EAAV;AACH;;AAEMgB,QAAAA,IAAI,CAACC,GAAD,EAAuB;AAC9B,cAAIC,GAAG,GAAGN,IAAI,CAACO,SAAL,CAAeF,GAAf,CAAV;AACAvB,UAAAA,GAAG,CAAC,OAAD,EAAUwB,GAAV,CAAH;AAEA,eAAKlB,EAAL,CAAQgB,IAAR,CAAaE,GAAb;AACH;;AA/BmC,O,UAEtBhB,Q,GAAqB,I","sourcesContent":["import { _decorator, Component, log, Node } from 'cc';\r\nimport { GameMessageBase } from './GameMessage';\r\nimport { EventCenter } from './EventCenter';\r\nimport { EventDefine } from './EventDefine';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('WSClient')\r\nexport class WSClient extends Component {\r\n\r\n    public static instance: WSClient = null;\r\n    private ws: WebSocket = null;\r\n\r\n    protected onLoad(): void {\r\n        WSClient.instance = this;\r\n    }\r\n\r\n    public connect() {\r\n        log(\"client try connect server!\");\r\n\r\n        let ws = new WebSocket(\"ws://localhost:8080\");\r\n        ws.onopen = (ev: MessageEvent) => {\r\n            EventCenter.instance.emit(EventDefine.EVENT_NETWORK_CONNECT);\r\n        }\r\n\r\n        ws.onmessage = (ev: MessageEvent) => {\r\n            log(\"onmessage\", ev.data);\r\n            let obj = JSON.parse(ev.data) as GameMessageBase;\r\n            EventCenter.instance.emit(obj.type.toString(), obj);\r\n        }\r\n\r\n        this.ws = ws;\r\n    }\r\n\r\n    public send(msg: GameMessageBase) {\r\n        let str = JSON.stringify(msg);\r\n        log(\"send:\", str);\r\n\r\n        this.ws.send(str);\r\n    }\r\n}\r\n\r\n\r\n"]}