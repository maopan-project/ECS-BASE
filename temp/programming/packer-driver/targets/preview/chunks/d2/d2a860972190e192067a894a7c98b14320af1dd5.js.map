{"version":3,"sources":["file:///F:/ACode/CocosCode/ECS_Demo/assets/src/ui/GameActor.ts"],"names":["_decorator","Sprite","SpriteFrame","v3","Vec3","MoveComponent","TransformComponent","World","GameActorMachine","GameActorIdle","GameActorWalk","StateType","GameUIBase","ccclass","property","GameActor","animIdleTime","animWalkTime","moveComp","transformComp","backupTransformComp","machine","tempVec3","tempBackupVec3","outVec3","start","entity","getComponent","getBackupComponent","changeState","update","deltaTime","isMove","checkIsMove","state","type","WALK","IDLE","pos","position","set","x","y","z","lerp","instance","uiLerpValue","node","equal"],"mappings":"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","sourcesContent":["import { _decorator, Sprite, SpriteFrame, v3, Vec3 } from 'cc';\r\nimport MoveComponent from '../ecs/components/MoveComponent';\r\nimport TransformComponent from '../ecs/components/TransformComponent';\r\nimport World from '../ecs/framework/World';\r\nimport GameActorMachine from '../state-machine/GameActorMachine';\r\nimport { GameActorIdle, GameActorWalk, StateType } from '../state-machine/GameActorState';\r\nimport GameUIBase from '../ui/GameUIBase';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport class GameActor extends GameUIBase {\r\n\r\n    @property(Sprite)\r\n    spriteActor: Sprite = null;\r\n\r\n    @property([SpriteFrame])\r\n    sfIdle: SpriteFrame[] = [];\r\n\r\n    @property([SpriteFrame])\r\n    sfWalk: SpriteFrame[] = [];\r\n\r\n    animIdleTime: number = 1;\r\n\r\n    animWalkTime: number = 1;\r\n\r\n    moveComp: MoveComponent = null;\r\n\r\n    transformComp: TransformComponent = null;\r\n\r\n    backupTransformComp: TransformComponent = null;\r\n\r\n    machine: GameActorMachine = null;\r\n\r\n    start() {\r\n        this.transformComp = this.entity.getComponent(TransformComponent);\r\n        this.moveComp = this.entity.getComponent(MoveComponent);\r\n        this.backupTransformComp = this.entity.getBackupComponent(TransformComponent);\r\n\r\n        this.machine = new GameActorMachine(this);\r\n\r\n        this.machine.changeState(new GameActorIdle());\r\n    }\r\n\r\n\r\n    private tempVec3 = v3();\r\n\r\n    private tempBackupVec3 = v3();\r\n\r\n    private outVec3 = v3();\r\n\r\n    update(deltaTime: number) {\r\n        let isMove = this.checkIsMove();\r\n\r\n        if (isMove && this.machine.state.type != StateType.WALK) {\r\n            this.machine.changeState(new GameActorWalk());\r\n        } else if (!isMove && this.machine.state.type != StateType.IDLE) {\r\n            this.machine.changeState(new GameActorIdle());\r\n        }\r\n\r\n\r\n        let pos = this.transformComp.position;\r\n        this.tempVec3.set(pos.x, pos.y, pos.z);\r\n        pos = this.backupTransformComp.position;\r\n        this.tempBackupVec3.set(pos.x, pos.y, pos.z);\r\n        Vec3.lerp(this.outVec3, this.tempBackupVec3, this.tempVec3, World.instance.uiLerpValue);\r\n\r\n        this.node.position = this.outVec3;\r\n\r\n        this.machine.update(deltaTime);\r\n    }\r\n\r\n    checkIsMove() {\r\n        return !this.transformComp.position.equal(this.backupTransformComp.position);\r\n    }\r\n}\r\n\r\n\r\n"]}