{"version":3,"sources":["file:///D:/File/Cocos/ECS_Demo/assets/src/state-machine/GameActorState.ts"],"names":["GameActorStateBase","GameActorWalk","GameActorIdle","v3","GameTool","type","StateType","NONE","machine","time","onEnter","onuUpdate","deltaTime","onExit","actor","percent","animWalkTime","prefabAnimFrame","spriteActor","sfIdle","reverseNode","scale","node","moveComp","moveSpeed","x","y","animIdleTime"],"mappings":";;;6FAIaA,kB,EA4BAC,a,EAyBAC,a;;;;;;;;;;;;;;;;;;;;;;;AAzDJC,MAAAA,E,OAAAA,E;;AACFC,MAAAA,Q;;;;;;;;;oCAGMJ,kB,GAAN,MAAMA,kBAAN,CAAyB;AAAA;AAAA,eAC5BK,IAD4B,GACVC,SAAS,CAACC,IADA;AAAA,eAG5BC,OAH4B,GAGA,IAHA;AAAA,eAK5BC,IAL4B,GAKb,CALa;AAAA;;AAO5BC,QAAAA,OAAO,GAAG,CAET;;AAEDC,QAAAA,SAAS,CAACC,SAAD,EAAoB;AACzB,eAAKH,IAAL,IAAaG,SAAb;AACH;;AAEDC,QAAAA,MAAM,GAAG;AACL,eAAKL,OAAL,GAAe,IAAf;AACH;;AAjB2B,O;;2BAoBpBF,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;;;+BAQCL,a,GAAN,MAAMA,aAAN,SAA4BD,kBAA5B,CAA+C;AAClDW,QAAAA,SAAS,CAACC,SAAD,EAA0B;AAC/B,gBAAMD,SAAN,CAAgBC,SAAhB;AAEA,cAAIE,KAAK,GAAG,KAAKN,OAAL,CAAaM,KAAzB;AACA,cAAIC,OAAO,GAAI,KAAKN,IAAL,GAAYK,KAAK,CAACE,YAAnB,GAAmC,CAAjD;AACA;AAAA;AAAA,oCAASC,eAAT,CAAyBH,KAAK,CAACI,WAA/B,EAA4CJ,KAAK,CAACK,MAAlD,EAA0DJ,OAA1D;AAEA,eAAKK,WAAL;AACH;;AAEDA,QAAAA,WAAW,GAAG;AACV,cAAIN,KAAK,GAAG,KAAKN,OAAL,CAAaM,KAAzB;AACA,cAAIO,KAAK,GAAGlB,EAAE,CAACW,KAAK,CAACQ,IAAN,CAAWD,KAAZ,CAAd;;AAEA,cAAIP,KAAK,CAACS,QAAN,CAAeC,SAAf,CAAyBC,CAAzB,GAA6B,CAAjC,EAAoC;AAChCJ,YAAAA,KAAK,CAACI,CAAN,GAAU,CAAV;AACH,WAFD,MAEO;AACHJ,YAAAA,KAAK,CAACK,CAAN,GAAU,CAAC,CAAX;AACH;;AAEDZ,UAAAA,KAAK,CAACQ,IAAN,CAAWD,KAAX,GAAmBA,KAAnB;AACH;;AAtBiD,O;;+BAyBzCnB,a,GAAN,MAAMA,aAAN,SAA4BF,kBAA5B,CAA+C;AAClDW,QAAAA,SAAS,CAACC,SAAD,EAA0B;AAC/B,gBAAMD,SAAN,CAAgBC,SAAhB;AAEA,cAAIE,KAAK,GAAG,KAAKN,OAAL,CAAaM,KAAzB;AACA,cAAIC,OAAO,GAAI,KAAKN,IAAL,GAAYK,KAAK,CAACa,YAAnB,GAAmC,CAAjD;AACA;AAAA;AAAA,oCAASV,eAAT,CAAyBH,KAAK,CAACI,WAA/B,EAA4CJ,KAAK,CAACK,MAAlD,EAA0DJ,OAA1D;AACH;;AAPiD,O","sourcesContent":["import { v3 } from \"cc\";\r\nimport GameTool from \"../GameTool\";\r\nimport GameActorMachine from \"./GameActorMachine\";\r\n\r\nexport class GameActorStateBase {\r\n    type: StateType = StateType.NONE;\r\n\r\n    machine: GameActorMachine = null;\r\n\r\n    time: number = 0;\r\n\r\n    onEnter() {\r\n\r\n    }\r\n\r\n    onuUpdate(deltaTime: number) {\r\n        this.time += deltaTime;\r\n    }\r\n\r\n    onExit() {\r\n        this.machine = null;\r\n    }\r\n}\r\n\r\nexport enum StateType {\r\n    NONE,\r\n    IDLE,\r\n    WALK,\r\n    ATTACK,\r\n    DIE,\r\n}\r\n\r\nexport class GameActorWalk extends GameActorStateBase {\r\n    onuUpdate(deltaTime: number): void {\r\n        super.onuUpdate(deltaTime);\r\n\r\n        let actor = this.machine.actor;\r\n        let percent = (this.time / actor.animWalkTime) % 1;\r\n        GameTool.prefabAnimFrame(actor.spriteActor, actor.sfIdle, percent);\r\n\r\n        this.reverseNode();\r\n    }\r\n\r\n    reverseNode() {\r\n        let actor = this.machine.actor;\r\n        let scale = v3(actor.node.scale);\r\n\r\n        if (actor.moveComp.moveSpeed.x > 0) {\r\n            scale.x = 1;\r\n        } else {\r\n            scale.y = -1;\r\n        }\r\n\r\n        actor.node.scale = scale;\r\n    }\r\n}\r\n\r\nexport class GameActorIdle extends GameActorStateBase {\r\n    onuUpdate(deltaTime: number): void {\r\n        super.onuUpdate(deltaTime);\r\n\r\n        let actor = this.machine.actor;\r\n        let percent = (this.time / actor.animIdleTime) % 1;\r\n        GameTool.prefabAnimFrame(actor.spriteActor, actor.sfIdle, percent);\r\n    }\r\n}"]}