{"version":3,"sources":["file:///D:/File/Cocos/ECS_Demo/assets/src/ecs/systems/RenderSystem.ts"],"names":["Component","Prefab","_decorator","SystemType","EntityType","World","ccclass","property","RenderSystem","world","type","Render","onLoad","instance","addSystemToCycle","onUpdate","entities","newEntitiesInThisCycle","i","length","entity","Actor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,U,OAAAA,U;;AAEnBC,MAAAA,U,iBAAAA,U;AAAYC,MAAAA,U,iBAAAA,U;;AAEZC,MAAAA,K,iBAAAA,K;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;yBAGTM,Y,WADpBF,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAACN,MAAD,C,2BAFb,MACqBO,YADrB,SAC0CR,SAD1C,CACsE;AAAA;AAAA;;AAAA;;AAAA,eAIlES,KAJkE,GAInD,IAJmD;AAAA,eAMlEC,IANkE,GAM/C;AAAA;AAAA,wCAAWC,MANoC;AAAA;;AAQxDC,QAAAA,MAAM,GAAS;AACrB;AAAA;AAAA,8BAAMC,QAAN,CAAeC,gBAAf,CAAgC,IAAhC;AACH;;AAEDC,QAAAA,QAAQ,GAAS;AACb,cAAIC,QAAQ,GAAG,KAAKP,KAAL,CAAWQ,sBAA1B;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,gBAAIE,MAAM,GAAGJ,QAAQ,CAACE,CAAD,CAArB;;AAEA,gBAAIE,MAAM,CAACV,IAAP,KAAgB;AAAA;AAAA,0CAAWW,KAA/B,EAAsC,CAClC;AACA;AACA;AACA;AACH;AAEJ;AACJ;;AA1BiE,O;;;;;iBAE5C,I","sourcesContent":["import { Component, Prefab, _decorator, instantiate } from \"cc\";\r\nimport { TransformComponent } from \"../components/TransformComponent\";\r\nimport { SystemType, EntityType } from \"../framework/Config\";\r\nimport { System } from \"../framework/System\";\r\nimport { World } from \"../framework/World\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RenderSystem')\r\nexport default class RenderSystem extends Component implements System {\r\n    @property(Prefab)\r\n    PrefabArrow: Prefab = null;\r\n\r\n    world: World = null;\r\n\r\n    type: SystemType = SystemType.Render;\r\n\r\n    protected onLoad(): void {\r\n        World.instance.addSystemToCycle(this);\r\n    }\r\n\r\n    onUpdate(): void {\r\n        let entities = this.world.newEntitiesInThisCycle;\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            let entity = entities[i];\r\n\r\n            if (entity.type === EntityType.Actor) {\r\n                // let arrow = instantiate(this.PrefabArrow).getComponent(EntityType.Actor);\r\n                // arrow.entity = entity;\r\n                // arrow.transform = entity.getComponent(TransformComponent);\r\n                // arrow.node.parent = this.node;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}"]}