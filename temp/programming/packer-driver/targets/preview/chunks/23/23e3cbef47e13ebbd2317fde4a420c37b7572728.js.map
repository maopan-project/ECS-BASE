{"version":3,"sources":["file:///D:/File/Cocos/ECS_Demo/assets/src/GameStart.ts"],"names":["_decorator","Component","Input","input","KeyCode","Prefab","Vector3","GameMessageC2S_Operation","GameMessageOperationBody","WSClient","ccclass","property","GameStart","_keyMap","Map","squares","uid","onLoad","on","EventType","KEY_DOWN","keyDown","KEY_UP","keyUp","start","update","deltaTime","v3","get","KEY_A","x","KEY_S","y","KEY_D","KEY_W","body","dir","msg","instance","send","event","has","keyCode","set"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA0BC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,O,OAAAA,O;AAASC,MAAAA,M,OAAAA,M;;AAE7DC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,wB,iBAAAA,wB;AAA0BC,MAAAA,wB,iBAAAA,wB;;AAC1BC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;2BAGjBY,S,WADZF,OAAO,CAAC,WAAD,C,UAGHC,QAAQ,CAACN,MAAD,C,2BAHb,MACaO,SADb,SAC+BX,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA,eAK7BY,OAL6B,GAKI,IAAIC,GAAJ,EALJ;AAAA,eAOrCC,OAPqC,GAON,IAAID,GAAJ,EAPM;AAAA,eASrCE,GATqC,GASvB,CATuB;AAAA;;AAW3BC,QAAAA,MAAM,GAAS;AACrBd,UAAAA,KAAK,CAACe,EAAN,CAAShB,KAAK,CAACiB,SAAN,CAAgBC,QAAzB,EAAmC,KAAKC,OAAxC,EAAiD,IAAjD;AACAlB,UAAAA,KAAK,CAACe,EAAN,CAAShB,KAAK,CAACiB,SAAN,CAAgBG,MAAzB,EAAiC,KAAKC,KAAtC,EAA6C,IAA7C;AACH;;AAESC,QAAAA,KAAK,GAAG,CAEjB;;AAESC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AAEhC,cAAIC,EAAE,GAAG;AAAA;AAAA,mCAAT;AAEA,cAAI,KAAKd,OAAL,CAAae,GAAb,CAAiBxB,OAAO,CAACyB,KAAzB,CAAJ,EACIF,EAAE,CAACG,CAAH,IAAQ,CAAR;AAEJ,cAAI,KAAKjB,OAAL,CAAae,GAAb,CAAiBxB,OAAO,CAAC2B,KAAzB,CAAJ,EACIJ,EAAE,CAACK,CAAH,IAAQ,CAAR;AAEJ,cAAI,KAAKnB,OAAL,CAAae,GAAb,CAAiBxB,OAAO,CAAC6B,KAAzB,CAAJ,EACIN,EAAE,CAACG,CAAH,IAAQ,CAAR;AAEJ,cAAI,KAAKjB,OAAL,CAAae,GAAb,CAAiBxB,OAAO,CAAC8B,KAAzB,CAAJ,EACIP,EAAE,CAACG,CAAH,IAAQ,CAAR;AAEJ,cAAIK,IAAI,GAAG;AAAA;AAAA,qEAAX;AACAA,UAAAA,IAAI,CAACC,GAAL,GAAWT,EAAX;AAEA,cAAIU,GAAG,GAAG;AAAA;AAAA,qEAAV;AACAA,UAAAA,GAAG,CAACrB,GAAJ,GAAU,KAAKA,GAAf;AACAqB,UAAAA,GAAG,CAACF,IAAJ,GAAWA,IAAX;AAEA;AAAA;AAAA,oCAASG,QAAT,CAAkBC,IAAlB,CAAuBF,GAAvB;AACH;;AAGOhB,QAAAA,OAAO,CAACmB,KAAD,EAA6B;AACxC,cAAI,KAAK3B,OAAL,CAAa4B,GAAb,CAAiBD,KAAK,CAACE,OAAvB,CAAJ,EAAqC;AACjC,iBAAK7B,OAAL,CAAa8B,GAAb,CAAiBH,KAAK,CAACE,OAAvB,EAAgC,IAAhC;AACH;AACJ;;AAEOnB,QAAAA,KAAK,CAACiB,KAAD,EAA6B;AACtC,cAAI,KAAK3B,OAAL,CAAa4B,GAAb,CAAiBD,KAAK,CAACE,OAAvB,CAAJ,EAAqC;AACjC,iBAAK7B,OAAL,CAAa8B,GAAb,CAAiBH,KAAK,CAACE,OAAvB,EAAgC,KAAhC;AACH;AACJ;;AAzDoC,O;;;;;iBAGd,I","sourcesContent":["import { _decorator, Component, EventKeyboard, Input, input, KeyCode, Prefab } from 'cc';\r\nimport { Square } from './Square';\r\nimport { Vector3 } from './Config';\r\nimport { GameMessageC2S_Operation, GameMessageOperationBody } from './GameMessageBase';\r\nimport { WSClient } from './WSClient';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameStart')\r\nexport class GameStart extends Component {\r\n\r\n    @property(Prefab)\r\n    squarePrefab: Prefab = null;\r\n\r\n    private _keyMap: Map<KeyCode, boolean> = new Map();\r\n\r\n    squares: Map<number, Square> = new Map();\r\n\r\n    uid: number = 0;\r\n\r\n    protected onLoad(): void {\r\n        input.on(Input.EventType.KEY_DOWN, this.keyDown, this);\r\n        input.on(Input.EventType.KEY_UP, this.keyUp, this);\r\n    }\r\n\r\n    protected start() {\r\n\r\n    }\r\n\r\n    protected update(deltaTime: number) {\r\n\r\n        let v3 = new Vector3();\r\n\r\n        if (this._keyMap.get(KeyCode.KEY_A))\r\n            v3.x -= 1;\r\n\r\n        if (this._keyMap.get(KeyCode.KEY_S))\r\n            v3.y -= 1;\r\n\r\n        if (this._keyMap.get(KeyCode.KEY_D))\r\n            v3.x += 1;\r\n\r\n        if (this._keyMap.get(KeyCode.KEY_W))\r\n            v3.x += 1;\r\n\r\n        let body = new GameMessageOperationBody();\r\n        body.dir = v3;\r\n\r\n        let msg = new GameMessageC2S_Operation();\r\n        msg.uid = this.uid;\r\n        msg.body = body;\r\n\r\n        WSClient.instance.send(msg);\r\n    }\r\n\r\n\r\n    private keyDown(event: EventKeyboard): void {\r\n        if (this._keyMap.has(event.keyCode)) {\r\n            this._keyMap.set(event.keyCode, true);\r\n        }\r\n    }\r\n\r\n    private keyUp(event: EventKeyboard): void {\r\n        if (this._keyMap.has(event.keyCode)) {\r\n            this._keyMap.set(event.keyCode, false);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}