{"version":3,"sources":["file:///D:/File/Cocos/ECS_Demo/assets/src/state-machine/GameActorState.ts"],"names":["GameActorStateBase","GameActorWalk","GameActorIdle","GameTool","type","StateType","NONE","machine","time","onEnter","onuUpdate","deltaTime","onExit","actor","percent","animWalkTime","prefabAnimFrame","spriteActor","sfIdle","reverseNode","moveComp","moveSpeed","x","node","animIdleTime"],"mappings":";;;wCAGaA,kB,EA4BAC,a,EAkBAC,a;;;;;;;;;;;;;;;;;;;;;;AAjDNC,MAAAA,Q;;;;;;;oCAGMH,kB,GAAN,MAAMA,kBAAN,CAAyB;AAAA;AAAA,eAC5BI,IAD4B,GACVC,SAAS,CAACC,IADA;AAAA,eAG5BC,OAH4B,GAGA,IAHA;AAAA,eAK5BC,IAL4B,GAKb,CALa;AAAA;;AAO5BC,QAAAA,OAAO,GAAG,CAET;;AAEDC,QAAAA,SAAS,CAACC,SAAD,EAAoB;AACzB,eAAKH,IAAL,IAAaG,SAAb;AACH;;AAEDC,QAAAA,MAAM,GAAG;AACL,eAAKL,OAAL,GAAe,IAAf;AACH;;AAjB2B,O;;2BAoBpBF,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;;;+BAQCJ,a,GAAN,MAAMA,aAAN,SAA4BD,kBAA5B,CAA8C;AACjDU,QAAAA,SAAS,CAACC,SAAD,EAA0B;AAC/B,gBAAMD,SAAN,CAAgBC,SAAhB;AAEA,cAAIE,KAAK,GAAG,KAAKN,OAAL,CAAaM,KAAzB;AACA,cAAIC,OAAO,GAAI,KAAKN,IAAL,GAAYK,KAAK,CAACE,YAAnB,GAAmC,CAAjD;AACA;AAAA;AAAA,oCAASC,eAAT,CAAyBH,KAAK,CAACI,WAA/B,EAA4CJ,KAAK,CAACK,MAAlD,EAA0DJ,OAA1D;AACH;;AAEDK,QAAAA,WAAW,GAAE;AACT,cAAIN,KAAK,GAAG,KAAKN,OAAL,CAAaM,KAAzB;;AAEA,cAAIA,KAAK,CAACO,QAAN,CAAeC,SAAf,CAAyBC,CAAzB,GAA6B,CAAjC,EAAoC;AAChCT,YAAAA,KAAK,CAACU,IAAN,CAAWD,CAAX;AACH;AACJ;;AAfgD,O;;+BAkBxCpB,a,GAAN,MAAMA,aAAN,SAA4BF,kBAA5B,CAA+C;AAClDU,QAAAA,SAAS,CAACC,SAAD,EAA0B;AAC/B,gBAAMD,SAAN,CAAgBC,SAAhB;AAEA,cAAIE,KAAK,GAAG,KAAKN,OAAL,CAAaM,KAAzB;AACA,cAAIC,OAAO,GAAI,KAAKN,IAAL,GAAYK,KAAK,CAACW,YAAnB,GAAmC,CAAjD;AACA;AAAA;AAAA,oCAASR,eAAT,CAAyBH,KAAK,CAACI,WAA/B,EAA4CJ,KAAK,CAACK,MAAlD,EAA0DJ,OAA1D;AACH;;AAPiD,O","sourcesContent":["import GameTool from \"../GameTool\";\r\nimport GameActorMachine from \"./GameActorMachine\";\r\n\r\nexport class GameActorStateBase {\r\n    type: StateType = StateType.NONE;\r\n\r\n    machine: GameActorMachine = null;\r\n\r\n    time: number = 0;\r\n\r\n    onEnter() {\r\n\r\n    }\r\n\r\n    onuUpdate(deltaTime: number) {\r\n        this.time += deltaTime;\r\n    }\r\n\r\n    onExit() {\r\n        this.machine = null;\r\n    }\r\n}\r\n\r\nexport enum StateType {\r\n    NONE,\r\n    IDLE,\r\n    WALK,\r\n    ATTACK,\r\n    DIE,\r\n}\r\n\r\nexport class GameActorWalk extends GameActorStateBase{\r\n    onuUpdate(deltaTime: number): void {\r\n        super.onuUpdate(deltaTime);\r\n\r\n        let actor = this.machine.actor;\r\n        let percent = (this.time / actor.animWalkTime) % 1;\r\n        GameTool.prefabAnimFrame(actor.spriteActor, actor.sfIdle, percent);\r\n    }\r\n\r\n    reverseNode(){\r\n        let actor = this.machine.actor;\r\n\r\n        if (actor.moveComp.moveSpeed.x > 0) {\r\n            actor.node.x\r\n        }\r\n    }\r\n}\r\n\r\nexport class GameActorIdle extends GameActorStateBase {\r\n    onuUpdate(deltaTime: number): void {\r\n        super.onuUpdate(deltaTime);\r\n\r\n        let actor = this.machine.actor;\r\n        let percent = (this.time / actor.animIdleTime) % 1;\r\n        GameTool.prefabAnimFrame(actor.spriteActor, actor.sfIdle, percent);\r\n    }\r\n}"]}