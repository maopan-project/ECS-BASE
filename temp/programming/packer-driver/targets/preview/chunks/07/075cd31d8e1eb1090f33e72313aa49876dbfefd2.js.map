{"version":3,"sources":["file:///F:/ACode/CocosCode/ECS_Demo/assets/src/prefabs/GameActor.ts"],"names":["_decorator","Component","v3","Sprite","SpriteFrame","Vec3","TransformComponent","GameActorMachine","GameActorIdle","GameActorWalk","StateType","MoveComponent","World","ccclass","property","GameActor","animIdleTime","animWalkTime","entity","moveComp","transformComp","backupTransformComp","machine","tempVec3","tempBackupVec3","outVec3","start","getComponent","getBackupComponent","changeState","update","deltaTime","isMove","checkIsMove","state","type","WALK","IDLE","pos","position","set","x","y","z","lerp","instance","uiLerpValue","node","equal"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { Entity } from '../ecs/framework/Entity';\r\nimport { TransformComponent } from '../ecs/components/TransformComponent';\r\nimport { v3 } from 'cc';\r\nimport { Sprite } from 'cc';\r\nimport { SpriteFrame } from 'cc';\r\nimport GameActorMachine from '../state-machine/GameActorMachine';\r\nimport { GameActorIdle, GameActorWalk, StateType } from '../state-machine/GameActorState';\r\nimport MoveComponent from '../ecs/components/MoveCompoent';\r\nimport { log } from 'cc';\r\nimport { Vec3 } from 'cc';\r\nimport { World } from '../ecs/framework/World';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport class GameActor extends Component {\r\n\r\n    @property(Sprite)\r\n    spriteActor: Sprite = null;\r\n\r\n    @property([SpriteFrame])\r\n    sfIdle: SpriteFrame[] = [];\r\n\r\n    @property([SpriteFrame])\r\n    sfWalk: SpriteFrame[] = [];\r\n\r\n    animIdleTime: number = 1;\r\n\r\n    animWalkTime: number = 1;\r\n\r\n    entity: Entity = null;\r\n\r\n    moveComp: MoveComponent = null;\r\n\r\n    transformComp: TransformComponent = null;\r\n\r\n    backupTransformComp: TransformComponent = null;\r\n\r\n    machine: GameActorMachine = null;\r\n\r\n    start() {\r\n        this.transformComp = this.entity.getComponent(TransformComponent);\r\n        this.moveComp = this.entity.getComponent(MoveComponent);\r\n        this.backupTransformComp = this.entity.getBackupComponent(TransformComponent);\r\n\r\n        this.machine = new GameActorMachine(this);\r\n\r\n        this.machine.changeState(new GameActorIdle());\r\n    }\r\n\r\n\r\n    private tempVec3 = v3();\r\n\r\n    private tempBackupVec3 = v3();\r\n\r\n    private outVec3 = v3();\r\n\r\n    update(deltaTime: number) {\r\n        let isMove = this.checkIsMove();\r\n\r\n        if (isMove && this.machine.state.type != StateType.WALK) {\r\n            this.machine.changeState(new GameActorWalk());\r\n        } else if (!isMove && this.machine.state.type != StateType.IDLE) {\r\n            this.machine.changeState(new GameActorIdle());\r\n        }\r\n\r\n\r\n        let pos = this.transformComp.position;\r\n        this.tempVec3.set(pos.x, pos.y, pos.z);\r\n        pos = this.backupTransformComp.position;\r\n        this.tempBackupVec3.set(pos.x, pos.y, pos.z);\r\n        Vec3.lerp(this.outVec3, this.tempBackupVec3, this.tempVec3, World.instance.uiLerpValue);\r\n        this.node.position = this.outVec3;\r\n\r\n        this.machine.update(deltaTime);\r\n    }\r\n\r\n    checkIsMove() {\r\n        return !this.transformComp.position.equal(this.backupTransformComp.position);\r\n    }\r\n}\r\n\r\n\r\n"]}