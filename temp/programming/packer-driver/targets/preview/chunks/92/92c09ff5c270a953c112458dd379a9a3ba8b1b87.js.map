{"version":3,"sources":["file:///D:/File/Cocos/ECS_Demo/assets/src/ecs/systems/MoveSystem.ts"],"names":["MoveSystem","TransformComponent","SystemType","world","type","Physics","onUpdate","forEach","entity","transform"],"mappings":";;;+GASaA,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AARJC,MAAAA,kB,iBAAAA,kB;;AAEAC,MAAAA,U,iBAAAA,U;;;;;;;;;4BAMIF,U,GAAN,MAAMA,UAAN,CAAmC;AAAA;AAAA,eACtCG,KADsC,GACvB,IADuB;AAAA,eAGtCC,IAHsC,GAGnB;AAAA;AAAA,wCAAWC,OAHQ;AAAA;;AAKtCC,QAAAA,QAAQ,GAAS;AACb,eAAKH,KAAL,CAAWI,OAAX,CAAmB;AAAA;AAAA,uDAAnB,EAAyC,CAACC,MAAD,EAAiBC,SAAjB,KAAmD,CACxF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACH,WAVD;AAWH;;AAjBqC,O","sourcesContent":["import { misc } from \"cc\";\r\nimport { TransformComponent } from \"../components/TransformComponent\";\r\nimport { pForAngle } from \"../../Tool\";\r\nimport { SystemType } from \"../framework/Config\";\r\nimport { Entity } from \"../framework/Entity\";\r\nimport { System } from \"../framework/System\";\r\nimport { World } from \"../framework/World\";\r\n\r\n\r\nexport class MoveSystem implements System {\r\n    world: World = null;\r\n\r\n    type: SystemType = SystemType.Physics;\r\n\r\n    onUpdate(): void {\r\n        this.world.forEach([TransformComponent], (entity: Entity, transform: TransformComponent) => {\r\n            // if (transform.isMove) {\r\n            //     let dir = pForAngle(misc.degreesToRadians(transform.angle));\r\n            //     transform.x += transform.moveSpeed * dir.x;\r\n            //     transform.y += transform.moveSpeed * dir.y;\r\n            // }\r\n\r\n            // if (transform.isRotate) {\r\n            //     transform.angle++;\r\n            // }\r\n        });\r\n    }\r\n} "]}